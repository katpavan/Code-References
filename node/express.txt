EXPRESS/Users/Khoa/Desktop/code-ref/node/express.txt


-----------------------------------------------------------------------------------
DEFINE ROUTES FROM EXTERNAL FILES

//--------routes/api/users.js-----------//

const express = require('express');
const router = express.Router();

// @route GET api/users
// @desc Test Route
// @access Public
router.get('/', () => {
    res.send('User route')
});

module.exports = router;



//------------server.js-----------------//
app.use('/api/users', require('./routes/api/users'))

-----------------------------------------------------------------------------------
POST REQUEST USING AJAX
//HTML
                    <form id="newUserSignUp">
                        <input type="name" name="userName" placeholder="Your name" required>
                        <input type="email" name="email" placeholder="Email address" required>
                        <input type="password" name="password" placeholder="Password" required>
                        <button>Submit</button>
                    </form>

//JS
$('#newCustomIcon').submit(function (e) {
    e.preventDefault();
    $.ajax({
        url: '/newCustomIcon',
        method: 'POST',
        data: {
            foodName: $("#newCustomIcon input[name='foodName']").val(),
            expiration: $("#newCustomIcon input[name='expiration']").val(),
        }
    }).then(function (response) {
        console.log(response);
        console.log('made it ajax');
    });
})

//SERVER.JS
app.post('/newCustomIcon', (req, res) => {
    // con.query('INSERT INTO user_auth(userName, email, password_hash) VALUES(?,?,?)', [req.body.userName, req.body.email, p_hash], (err, results, fields) => {
    // })
    // res.redirect('/login/' + req.body.email + '/' + p_hash);
    console.log(req.body.foodName + req.body.expiration);
})


---------------------------------------------------------------------------
POST REQUEST USING FORM

					//html
    <form method="POST" action="/login" class="form-signin container" id="login">
        <h1 class="h3 mb-3 font-weight-normal">Please sign in</h1>
        <label for="inputEmail" class="sr-only">Email address</label>
        <input type="email" name="email" id="inputEmail" class="form-control" placeholder="Email address" required
            autofocus>
        <label for="inputPassword" class="sr-only">Password</label>
        <input type="password" name="password" id="inputPassword" class="form-control" placeholder="Password" required>
        <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>
        <p class="mt-5 mb-3 text-muted">&copy; 2017-2019</p>
    </form>

					//server.js
app.post('/login', function (req, res) {
    con.query('SELECT id, user_password FROM userLogin WHERE user_email = (?)', [req.body.email], (err, results, fields) => {
        if (err) throw error;

        if (results.length == 0) {
            res.send('Try Again');
        } else {
            bcrypt.compare(req.body.password, results[0].user_password, (err, result) => {
                if (result == true) {
                    req.session.user_id = results[0].id;
                    req.session.email = results[0].email;
                    var userData = [req.session.user_id, req.session.email];
                    res.render('pages/home', {
                        data: results,
                    });
                } else {
                    res.send('Wrong Password');
                }
            })
        }
    });
})

---------------------------------------------------------------------------

SAMPLE AJAX CALL TO GET REQUEST

//JS FILE
    $.ajax({
        type: "GET",
        url: '/icons-to-home',
        data: { si: selectedIcons }
    })

//SERVER ROUTE
app.get('/icons-to-home', (req, res) => {
    console.log(req.query.si)
});
---------------------------------------------------------------------------
ROUTE URL PARAMETERS

//the ":" makes it a variable
app.get('/:numero', function (req, res) {
    res.json(partners[req.params.numero]);
})





---------------------------------------------------------------------------
CREATE ROUTES AUTOMATICALY

//all files in public folder are now a route
app.use(express.static("public"));


---------------------------------------------------------------------------
---------------------------------------------------------------------------
MYSQL

//SELECTING FROM DATABASE w/ AJAX CALL

			//app.js
app.use(express.static("public"));

var mysql      = require('mysql');
var connection = mysql.createConnection({
  host     : 'localhost',
  user     : 'root',
  password : 'password',
  database : 'cats_db'
});
 
connection.connect();

app.get('/cats.json', function(req, res){
	connection.query('SELECT * FROM cats', function (error, results, fields) {
	  if (error) res.send(error)
	  else res.json(results);
	});
});

			//cats-select.js
function getCats(){
	$('div').empty();

	$.ajax({
		url: '/cats.json',
		method: 'GET'
	}).then(function(cats){
		for (var catIndex in cats){
			// console.log(catIndex);
			// console.log(cats[catIndex]);
			// console.log(cats);

			var p = $('<p>'); // <p></p>

			//one way
				// p.text(JSON.stringify(cats[catIndex]))

			//another way
				// p.text("id: " + cats[catIndex].id + ", cat name: " + cats[catIndex].cat_name)

			//another way
				p.text(`id: ${cats[catIndex].id}, cat name: ${cats[catIndex].cat_name}`)

		//created a link that will provide the link to delete
				var a = $('<a>'); //<a></a>
				a.text('delete'); //<a>delete</a>
				a.attr('href', '/cats-delete?cat_id=' + cats[catIndex].id)
				//<a href='/cats-delete?cat_id=3'>delete</a>

				p.append(a);




			$('div').prepend(p);
		}
	})
}

---------------------------------------------------------------------------
INSERTING NEW ROWS INTO DB

				//app.js
app.get('/cats-insert', function(req, res){
	connection.query('INSERT INTO cats (cat_name) VALUES (?)', [req.query.cat_name],function (error, results, fields) {
	  if (error) res.send(error)
	  else res.json({
	  	message: 'success'
	  });
	});
});

				//index.html body
<form>
	<input type="text" name="cat_name" placeholder="give a cat name">

	<button>insert the cat</button>
</form>

				//cats-insert.js
$('form').submit(function(e) {

    e.preventDefault(); // avoid to execute the actual submit of the form.
    var cn = $( "input[name='cat_name']" ).val();

	$.ajax({
		url: '/cats-insert',
		method: 'GET',
		data: {cat_name : cn}
	}).then(function(message){
		getCats();
	});

});

---------------------------------------------------------------------------
DELETE ROW FROM TABLE
					//app.js
app.get('/cats-delete', function(req, res){
	connection.query('DELETE FROM cats WHERE id = (?)', [req.query.cat_id],function (error, results, fields) {
	  
	  res.redirect('/');
	
	});
});

					//



---------------------------------------------------------------------------
USING FORM TO HIT ROUTE

					//index.html
	<form action="/animals-insert-form?_method=PUT" method="POST">
		<input type="text" name="animal_name" placeholder="give an animal name">

		<button>insert the animal</button>
	</form>

					//app.js
var methodOverride = require('method-override')
app.use(methodOverride('_method'))
app.use(bodyParser.urlencoded({ extended: false }))
app.use(bodyParser.json())
app.put('/animals-insert-form', function (req, res) {
	connection.query('INSERT INTO animals (animal_name) VALUES (?)', [req.body.animal_name], function (error, results, fields) {
		if (error) res.send(error)
		else res.redirect('/');
	});
});

---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------
---------------------------------------------------------------------------